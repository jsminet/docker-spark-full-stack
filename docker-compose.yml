version: '3.7'

services:
  traefik:
    image: traefik:v2.5
    ports:
      # Exposes port 80 for incomming web requests
      - "80:80"
      # The Web UI port http://0.0.0.0:8080 (enabled by --api.insecure=true)
      - "8080:8080"
      - "3306:3306"
      - "10009:10009"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./app/traefik/conf/traefik.yml:/etc/traefik/traefik.yml
    deploy:
      update_config:
        delay: 10s
        order: start-first
      placement:
        constraints:
          - node.role == manager
  
  viz:
    image: alexellis2/visualizer-arm:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.viz.rule=Host(`$VIZ_DNS`)"
        - "traefik.http.routers.viz.entrypoints=web"
        - "traefik.http.routers.viz.service=viz"
        - "traefik.http.services.viz.loadbalancer.server.port=8080"

  mysql-hive:
    image: mariadb:10.7
    environment: 
      - "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD"
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.tcp.services.mysql-hive.loadbalancer.server.port=3306"
        - "traefik.tcp.routers.mysql-hive.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.mysql-hive.entrypoints=mysql"
    volumes:
      - "./db/mysql/dump/hive/2.3.9:/docker-entrypoint-initdb.d"

  kyuubi:
    image: ${SPARK_IMAGE}
    hostname: kyuubi
    environment:
      - "KYUUBI_CONF_DIR=$KYUUBI_CONF_DIR"
      - "SPARK_CONF_DIR=$KYUUBI_CONF_DIR"
      - "HADOOP_CONF_DIR=$KYUUBI_CONF_DIR"
      - "KYUUBI_WORK_DIR_ROOT=$KYUUBI_WORK_DIR_ROOT"
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.tcp.routers.kyuubi.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.kyuubi.entrypoints=kyuubi"
        - "traefik.tcp.routers.kyuubi.service=kyuubi"
        - "traefik.tcp.services.kyuubi.loadbalancer.server.port=$KYUUBI_FRONTEND_BIND_PORT"
    command: kyuubi
    volumes:
      - "./app/kyuubi:/app/kyuubi"
      - "./drivers/mysql:/drivers/mysql"

  namenode:
    image: ${HADOOP_IMAGE}
    build: https://github.com/jsminet/docker-apache-hadoop.git#3.2.2
    # We set labels to tell Traefik to assign a hostname to the new service
    hostname: namenode
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager
      labels:
          - "traefik.enable=true"
          - "traefik.http.routers.namenode.rule=Host(`$HADOOP_DNS`)"
          - "traefik.http.routers.namenode.entrypoints=web"
          - "traefik.http.routers.namenode.service=namenode"
          - "traefik.http.services.namenode.loadbalancer.server.port=$DFS_NAMENODE_HTTP_PORT"
    environment: 
      - "DFS_NAMENODE_RPC_BIND_HOST=$DFS_NAMENODE_RPC_BIND_HOST"
      - "YARN_RESOURCEMANAGER_HOSTNAME=$YARN_RESOURCEMANAGER_HOSTNAME"
      - "DFS_REPLICATION=$DFS_REPLICATION"
      - "HADOOP_CONF_DIR=$HADOOP_CONF_DIR"
    volumes: 
      - "./app/hadoop/conf/etc/hadoop:$HADOOP_CONF_DIR"

  resourcemanager:
    image: ${HADOOP_IMAGE}
    hostname: $YARN_RESOURCEMANAGER_HOSTNAME
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager
      labels:
          - "traefik.enable=true"
          - "traefik.http.routers.resourcemanager.rule=Host(`$RESOURCEMANAGER_DNS`)"
          - "traefik.http.routers.resourcemanager.entrypoints=web"
          - "traefik.http.routers.resourcemanager.service=resourcemanager"
          - "traefik.http.services.resourcemanager.loadbalancer.server.port=$YARN_RESOURCEMANAGER_HTTP_PORT"
    environment: 
      - "DFS_NAMENODE_RPC_BIND_HOST=$DFS_NAMENODE_RPC_BIND_HOST"
      - "YARN_RESOURCEMANAGER_HOSTNAME=$YARN_RESOURCEMANAGER_HOSTNAME"
      - "HADOOP_CONF_DIR=$HADOOP_CONF_DIR"
      - "YARN_CONF_DIR=$YARN_CONF_DIR"
    command: resourcemanager
    volumes: 
      - "./app/hadoop/conf/etc/hadoop:$YARN_CONF_DIR"

  nodemanager:
    image: ${HADOOP_IMAGE}
    hostname: $YARN_NODEMANAGE_HOSTNAME
    deploy:
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == worker
      labels:
          - "traefik.enable=true"
          - "traefik.http.routers.nodemanager.rule=Host(`$NODEMANAGER_DNS`)"
          - "traefik.http.routers.nodemanager.entrypoints=web"
          - "traefik.http.routers.nodemanager.service=nodemanager"
          - "traefik.http.services.nodemanager.loadbalancer.server.port=$YARN_NODEMANAGER_HTTP_PORT"
    environment: 
      - "DFS_NAMENODE_RPC_BIND_HOST=$DFS_NAMENODE_RPC_BIND_HOST"
      - "YARN_RESOURCEMANAGER_HOSTNAME=$YARN_RESOURCEMANAGER_HOSTNAME"
      - "HADOOP_CONF_DIR=$HADOOP_CONF_DIR"
      - "YARN_CONF_DIR=$YARN_CONF_DIR"
    command: nodemanager
    volumes: 
      - "./app/hadoop/conf/etc/hadoop:$YARN_CONF_DIR"

  datanode:
    image: ${HADOOP_IMAGE}
    deploy:
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
    environment: 
      - "DFS_NAMENODE_RPC_BIND_HOST=$DFS_NAMENODE_RPC_BIND_HOST"
      - "YARN_RESOURCEMANAGER_HOSTNAME=$YARN_RESOURCEMANAGER_HOSTNAME"
      - "DFS_REPLICATION=$DFS_REPLICATION"
      - "HADOOP_CONF_DIR=$HADOOP_CONF_DIR"
    command: datanode
    volumes: 
      - "./app/hadoop/conf/etc/hadoop:$HADOOP_CONF_DIR"

  hive-benchmark:
    image: jsminet/hive-benchmark:latest
    build: https://github.com/jsminet/hive-benchmark.git#master
    environment: 
      - "KYUUBI_MASTER_HOST=kyuubi"
      - "KYUUBI_FRONTEND_BIND_PORT=$KYUUBI_FRONTEND_BIND_PORT"
      - "DFS_REPLICATION=$DFS_REPLICATION"
      - "DFS_NAMENODE_RPC_BIND_HOST=$DFS_NAMENODE_RPC_BIND_HOST"
      - "HADOOP_CONF_DIR=$HADOOP_CONF_DIR"
    volumes: 
      - "./app/hadoop/conf/etc/hadoop:$HADOOP_CONF_DIR"